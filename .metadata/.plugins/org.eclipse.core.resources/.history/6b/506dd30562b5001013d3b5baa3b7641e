# Updated Setup Guide - Virtual Environment Approach

## What Changed?

The HEADLESS_RPi_SETUP.md has been updated from **Step 4 onwards** to use **Python Virtual Environment** instead of system-wide PySerial installation.

---

## Why Virtual Environment?

✅ **Solves the "externally-managed-environment" error**
✅ **Modern Python best practice** (PEP 668)
✅ **Project isolation** - dependencies don't affect system Python
✅ **Safe** - can't break system packages
✅ **Proper for headless deployments** - required by modern Debian-based systems

---

## New Workflow (Quick Summary)

### Step 3: Install Base Tools
```bash
sudo apt-get update
sudo apt-get install -y python3-pip python3-venv python3-dev
```

### Step 4: Create Virtual Environment
```bash
mkdir -p ~/robot_control
cd ~/robot_control
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install pyserial
```

### Step 5+: Use Virtual Environment
```bash
# Always activate venv before running scripts
source ~/robot_control/venv/bin/activate

# Run script
python3 ~/robot_control/rpi_motor_controller.py
```

---

## Key Differences from Old Guide

### Old Approach (No Longer Used)
```bash
sudo pip3 install pyserial  # ❌ Gets "externally-managed-environment" error
```

### New Approach (Recommended)
```bash
source ~/robot_control/venv/bin/activate  # ✅ Activate venv first
pip install pyserial                      # ✅ Works inside venv
```

---

## For Systemd Service (Auto-Start)

**Old way (won't work):**
```ini
ExecStart=/usr/bin/python3 /home/pi/robot_control/rpi_motor_controller.py
```

**New way (correct):**
```ini
ExecStart=/home/pi/robot_control/venv/bin/python3 /home/pi/robot_control/rpi_motor_controller.py
Environment="PATH=/home/pi/robot_control/venv/bin"
```

---

## Auto-Activate on Login (Optional)

Add to `~/.bashrc`:
```bash
if [ -d ~/robot_control/venv ]; then
    source ~/robot_control/venv/bin/activate
fi
```

Then every SSH login automatically activates venv!

---

## One-Liner Setup (Fastest Way)

```bash
# Copy entire block and paste into RPi terminal:
mkdir -p ~/robot_control && \
cd ~/robot_control && \
python3 -m venv venv && \
source venv/bin/activate && \
pip install --upgrade pip && \
pip install pyserial && \
echo "✓ Setup complete! Virtual environment ready."
```

---

## Updated Checklist

Compare with HEADLESS_RPi_SETUP.md updated checklist:
- Create virtual environment step (NEW)
- Activate venv before installing (NEW)
- Use venv Python in systemd service (CHANGED)
- Auto-activate option (NEW)

---

## Testing

After setup, verify:
```bash
# Activate venv
source ~/robot_control/venv/bin/activate

# Check PySerial is there
python3 -c "import serial; print('OK')"

# Run script
python3 ~/robot_control/rpi_motor_controller.py
```

---

## Troubleshooting

**"No module named 'serial'" when running script?**
```bash
# Make sure venv is activated first!
source ~/robot_control/venv/bin/activate
python3 rpi_motor_controller.py
```

**"venv: command not found"?**
```bash
# Install venv package
sudo apt-get install python3-venv
```

**Service won't start?**
```bash
# Check service uses full venv path
sudo cat /etc/systemd/system/robot-motor.service
# Should show: /home/pi/robot_control/venv/bin/python3
```

---

## Summary

✅ **Updated guide now uses modern Python virtual environment approach**
✅ **Solves the "externally-managed-environment" error**
✅ **Follows Debian/RPi OS best practices**
✅ **All steps from Part 4 onwards updated**
✅ **Systemd service configuration updated with venv paths**
✅ **Troubleshooting section includes venv-specific solutions**

**Next step:** Follow HEADLESS_RPi_SETUP.md from **Part 3 onwards** with the new virtual environment approach!

